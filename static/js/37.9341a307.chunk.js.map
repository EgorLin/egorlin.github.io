{"version":3,"file":"static/js/37.9341a307.chunk.js","mappings":"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","sources":["webpack://anime-app/./src/components/Catalogs/EmptyCatalog/EmptyCatalog.module.scss?f722","components/Catalogs/EmptyCatalog/EmptyCatalogItem.tsx","components/Catalogs/EmptyCatalog/EmptyCatalog.tsx","components/UI/Cards/RecentCard/RecentCard.tsx","components/Catalogs/RecentReleasesCatalog/RecentReleasesCatalog.tsx","components/UI/Cards/TrendingCard/TrendingCard.tsx","components/SliderPanels/TrendingSliderPanel/TrendingSliderPanel.tsx","pages/Home/HomeItem.tsx","pages/Home/Home.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EmptyCatalog_container__OaxWA\",\"catalog\":\"EmptyCatalog_catalog__hBzO7\",\"spinnerHeight\":\"EmptyCatalog_spinnerHeight__-wdDd\"};","import { ReactElement, RefObject } from \"react\";\nimport { RequestStatuses } from \"../../../const/requestStatuses\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Trigger from \"../../UI/Trigger/Trigger\";\nimport styles from \"./EmptyCatalog.module.scss\";\n\ninterface IProps {\n  title?: string;\n  className?: string;\n  elements: ReactElement[];\n  status: string;\n  error: string;\n  target: RefObject<HTMLDivElement>;\n}\n\nfunction EmptyCatalogItem({\n  title,\n  className,\n  elements,\n  status,\n  error,\n  target,\n}: IProps): ReactElement {\n  let content;\n  switch (status) {\n    case RequestStatuses.IDLE:\n      content = <></>;\n      break;\n    case RequestStatuses.LOADING:\n      content = <Spinner containerSize={styles.spinnerHeight} />;\n      break;\n    case RequestStatuses.SUCCEEDED:\n      content = <Trigger target={target} />;\n      break;\n    case RequestStatuses.FAILED:\n      content = <div>{error}</div>;\n      break;\n  }\n\n  return (\n    <div className={[styles.container, className, \"wrapperM\"].join(\" \")}>\n      <h2 className={styles.title}>{title}</h2>\n      <div className={styles.catalog}>{elements}</div>\n      {content}\n    </div>\n  );\n}\n\nexport default EmptyCatalogItem;\n","import { ReactElement } from \"react\";\nimport { useObserver } from \"../../../hooks/useObserver\";\nimport EmptyCatalogItem from \"./EmptyCatalogItem\";\n\ninterface IProps {\n  className?: string;\n  title?: string;\n  status: string;\n  error: string;\n  elements: ReactElement[];\n  handleTrigger: () => void;\n}\n\nfunction EmptyCatalog({\n  title,\n  elements,\n  className,\n  status,\n  error,\n  handleTrigger,\n}: IProps): ReactElement {\n  const target = useObserver(() => {\n    handleTrigger();\n  }, status);\n\n  return (\n    <EmptyCatalogItem\n      title={title}\n      elements={elements}\n      className={className}\n      status={status}\n      error={error}\n      target={target}\n    />\n  );\n}\n\nexport default EmptyCatalog;\n","import { ReactElement } from \"react\";\nimport useNavigateAnime from \"../../../../hooks/useNavigateAnime\";\nimport { ILanguageTitles } from \"../../../../types/ILanguageTitles\";\nimport EpisodeBox from \"../../EpisodeBox/EpisodeBox\";\nimport EmptyCard, { CardSizes } from \"../EmptyCard/EmptyCard\";\n\ninterface IProps {\n  title: ILanguageTitles;\n  id: string;\n  image: string;\n  genres: string[];\n  lastEpisode: string;\n}\n\nfunction RecentCard({\n  title,\n  id,\n  image,\n  genres,\n  lastEpisode,\n}: IProps): ReactElement {\n  const episodeWindow = +lastEpisode ? (\n    <EpisodeBox>{lastEpisode}</EpisodeBox>\n  ) : (\n    <></>\n  );\n  const openAnime = useNavigateAnime(id);\n\n  return (\n    <EmptyCard\n      imageSize={CardSizes.AUTO}\n      hasBookmark\n      hasPlayButton\n      title={title}\n      image={image}\n      list={genres}\n      onClick={openAnime}\n      rightCornerContent={episodeWindow}\n      animeId={id}\n    />\n  );\n}\n\nexport default RecentCard;\n","import { ReactElement, useCallback, useEffect } from \"react\";\nimport { RequestStatuses } from \"../../../const/requestStatuses\";\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux\";\nimport {\n  fetchAnimeRecent,\n  selectAnimeRecent,\n} from \"../../../store/reducers/AnimeRecentSlice\";\nimport RecentCard from \"../../UI/Cards/RecentCard/RecentCard\";\nimport EmptyCatalog from \"../EmptyCatalog/EmptyCatalog\";\n\nfunction RecentReleasesCatalog(): ReactElement {\n  const dispatch = useAppDispatch();\n  const recent = useAppSelector(\n    selectAnimeRecent\n    // shallowEqual\n  );\n\n  const changePage = useCallback(() => {\n    if (recent.data.hasNextPage) {\n      dispatch(fetchAnimeRecent(+recent.data.currentPage + 1));\n    }\n  }, [recent.data.hasNextPage, recent.data.currentPage]);\n\n  useEffect(() => {\n    if (recent.status === RequestStatuses.IDLE) {\n      dispatch(fetchAnimeRecent(recent.data.currentPage));\n    }\n  }, []);\n\n  return (\n    <EmptyCatalog\n      title=\"Recent releases\"\n      status={recent.status}\n      error={recent.error}\n      handleTrigger={changePage}\n      elements={recent.data.results.map(\n        (anime) =>\n          anime && (\n            <RecentCard\n              key={anime.id + anime.episodeNumber}\n              id={anime.id}\n              title={anime.title}\n              image={anime.image}\n              genres={anime.genres}\n              lastEpisode={anime.episodeNumber}\n            />\n          )\n      )}\n    />\n  );\n}\n\nexport default RecentReleasesCatalog;\n","import { ReactElement } from \"react\";\nimport useNavigateAnime from \"../../../../hooks/useNavigateAnime\";\nimport { ILanguageTitles } from \"../../../../types/ILanguageTitles\";\nimport YearWindow from \"../../YearWindow/YearWindow\";\nimport EmptyCard, { CardSizes } from \"../EmptyCard/EmptyCard\";\n\ninterface IProps {\n  title: ILanguageTitles;\n  id: string;\n  image: string;\n  genres: string[];\n  date: number;\n}\n\nfunction TrendingCard({\n  title,\n  id,\n  image,\n  genres,\n  date,\n}: IProps): ReactElement {\n  const dateWindow = date ? <YearWindow>{date}</YearWindow> : null;\n  const openAnime = useNavigateAnime(id);\n\n  return (\n    <EmptyCard\n      animeId={id}\n      imageSize={CardSizes.WIDE}\n      isMainContentIn\n      hasBookmark\n      title={title}\n      image={image}\n      list={genres}\n      onClick={openAnime}\n      rightCornerContent={dateWindow}\n    />\n  );\n}\n\nexport default TrendingCard;\n","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../hooks/redux\";\nimport {\n  fetchAnimeTrending,\n  selectAnimeTrending,\n} from \"../../../store/reducers/AnimeTrendingSlice\";\nimport TrendingCard from \"../../UI/Cards/TrendingCard/TrendingCard\";\nimport EmptySliderPanel from \"../EmptySliderPanel/EmptySliderPanel\";\n\nfunction TrendingSliderPanel() {\n  const dispatch = useAppDispatch();\n  const trending = useAppSelector(selectAnimeTrending);\n\n  useEffect(() => {\n    dispatch(fetchAnimeTrending());\n  }, []);\n\n  return (\n    <EmptySliderPanel\n      status={trending.status}\n      error={trending.error}\n      elements={trending.data.results.map((result) => (\n        <TrendingCard\n          key={result.id}\n          id={result.id}\n          title={result.title}\n          image={result.image}\n          genres={result.genres}\n          date={result.releaseDate}\n        />\n      ))}\n    />\n  );\n}\n\nexport default TrendingSliderPanel;\n","import { ReactElement } from \"react\";\nimport RecentReleasesCatalog from \"../../components/Catalogs/RecentReleasesCatalog/RecentReleasesCatalog\";\nimport TrendingSliderPanel from \"../../components/SliderPanels/TrendingSliderPanel/TrendingSliderPanel\";\n\nfunction HomeItem(): ReactElement {\n  return (\n    <div>\n      <TrendingSliderPanel />\n      <RecentReleasesCatalog />\n    </div>\n  );\n}\n\nexport default HomeItem;\n","import { ReactElement } from \"react\";\nimport HomeItem from \"./HomeItem\";\n\nfunction Home(): ReactElement {\n  return <HomeItem />;\n}\n\nexport default Home;\n"],"names":["content","title","className","elements","status","error","target","RequestStatuses","Spinner","containerSize","styles","Trigger","join","handleTrigger","useObserver","id","image","genres","lastEpisode","episodeWindow","EpisodeBox","openAnime","useNavigateAnime","EmptyCard","imageSize","CardSizes","hasBookmark","hasPlayButton","list","onClick","rightCornerContent","animeId","dispatch","useAppDispatch","recent","useAppSelector","selectAnimeRecent","changePage","useCallback","data","hasNextPage","fetchAnimeRecent","currentPage","useEffect","EmptyCatalog","results","map","anime","episodeNumber","date","dateWindow","YearWindow","isMainContentIn","trending","selectAnimeTrending","fetchAnimeTrending","EmptySliderPanel","result","releaseDate"],"sourceRoot":""}