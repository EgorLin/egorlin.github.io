{"version":3,"file":"static/js/512.6184fcc1.chunk.js","mappings":"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","sources":["helpers/compareFunctions.ts","webpack://anime-app/./src/components/Comment/Comment.module.scss?34ce","components/Comment/CommentItem.tsx","components/Comment/Comment.tsx","webpack://anime-app/./src/components/CommentInput/CommentInput.module.scss?c32e","components/CommentInput/CommentInputItem.tsx","components/CommentInput/CommentInput.tsx","components/Comments/CommentsItem.tsx","components/Comments/Comments.tsx","webpack://anime-app/./src/assets/icons/StarIcon/StarIcon.module.scss?178b","assets/icons/StarIcon/StarIcon.tsx","webpack://anime-app/./src/components/Details/Details.module.scss?8e19","components/Details/DetailsItem.tsx","components/Details/Details.tsx","const/corsProxy.ts","components/ArtPlayer/ArtPlayerItem.tsx","components/ArtPlayer/ArtPlayer.tsx","components/LazyLoadingContainer/LazyLoadingContainer.tsx","components/UI/Cards/EpisodeCard/EpisodeCard.tsx","components/SliderPanels/EpisodeSliderPanel/EpisodeSliderPanel.tsx","webpack://anime-app/./src/components/EpisodeSection/EpisodeSection.module.scss?2888","components/EpisodeSection/EpisodeSectionItem.tsx","components/EpisodeSection/EpisodeSection.tsx","components/UI/Cards/RecommendationCard/RecommendationCard.tsx","components/SliderPanels/RecommendationSliderPanel/RecommendationSliderPanel.tsx","components/UI/Cards/RelationCard/RelationCard.tsx","components/SliderPanels/RelationSliderPanel/RelationSliderPanel.tsx","webpack://anime-app/./src/pages/AnimePage/AnimePage.module.scss?a74e","pages/AnimePage/AnimePageItem.tsx","pages/AnimePage/AnimePage.tsx"],"sourcesContent":["import { IDataFetch } from \"../types/IDataFetch\";\n\nexport function compareStatus<T>(\n  oldValue: IDataFetch<T>,\n  newValue: IDataFetch<T>\n): boolean {\n  return oldValue.status === newValue.status;\n}\n\ninterface IObjectId {\n  id: number | string;\n}\n\nexport function compareId<T extends IObjectId>(\n  oldValue: Array<T>,\n  newValue: Array<T>\n): boolean {\n  if (oldValue.length !== newValue.length) {\n    return false;\n  }\n  return newValue.every((element, index) => {\n    return oldValue[index].id === element.id;\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"comment\":\"Comment_comment__gE9ng\",\"info\":\"Comment_info__gKytC\",\"infoText\":\"Comment_infoText__zhREY\",\"username\":\"Comment_username__zSL7q\",\"text\":\"Comment_text__jIBrx\"};","import { ReactElement } from \"react\";\nimport { IUserAndCommentData } from \"../../types/ICommentsData\";\nimport styles from \"./Comment.module.scss\";\n\ninterface IProps {\n  comment: IUserAndCommentData;\n}\n\nfunction CommentItem({ comment }: IProps): ReactElement {\n  return (\n    <div className={styles.comment}>\n      <div className={styles.info}>\n        <img src={comment.imageUrl} alt=\"\" />\n        <div className={styles.infoText}>\n          <div className={styles.username}>{comment.username}</div>\n          <div> {new Date(comment.date).toLocaleString()}</div>\n        </div>\n      </div>\n      <div className={styles.text}>{comment.text}</div>\n    </div>\n  );\n}\n\nexport default CommentItem;\n","import { ReactElement } from \"react\";\nimport { IUserAndCommentData } from \"../../types/ICommentsData\";\nimport CommentItem from \"./CommentItem\";\n\ninterface IProps {\n  comment: IUserAndCommentData;\n}\n\nfunction Comment({ comment }: IProps): ReactElement {\n  return <CommentItem comment={comment} />;\n}\n\nexport default Comment;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CommentInput_container__0fY-X\",\"logIn\":\"CommentInput_logIn__cepjr\",\"button\":\"CommentInput_button__1GQah\",\"disabledButton\":\"CommentInput_disabledButton__i6xJQ\"};","import { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RouteNames } from \"../../router\";\nimport styles from \"./CommentInput.module.scss\";\n\ninterface IProps {\n  isAuth: boolean;\n  text: string;\n  updateComment: (newText: string) => void;\n  sendNewComment: () => void;\n}\n\nfunction CommentInputItem({\n  isAuth,\n  text,\n  updateComment,\n  sendNewComment,\n}: IProps): ReactElement {\n  return (\n    <div className={styles.container}>\n      {isAuth ? (\n        <>\n          <textarea\n            rows={6}\n            maxLength={10000}\n            placeholder=\"Leave a comment...\"\n            value={text}\n            onChange={(e) => updateComment(e.target.value)}\n          ></textarea>\n          <button\n            onClick={sendNewComment}\n            disabled={text.length === 0}\n            className={[\n              styles.button,\n              text.length === 0 ? styles.disabledButton : \"\",\n            ].join(\" \")}\n          >\n            send\n          </button>\n        </>\n      ) : (\n        <span>\n          Please,{\" \"}\n          <Link to={RouteNames.LOGIN}>\n            <span className={styles.logIn}>log in</span>\n          </Link>{\" \"}\n          to leave a comment\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default CommentInputItem;\n","import { getAuth } from \"firebase/auth\";\nimport { ReactElement, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FirebaseService from \"../../api/FirebaseService\";\nimport { selectCurrentUser } from \"../../store/reducers/CurrentUserSlice\";\nimport { IUserAndCommentData } from \"../../types/ICommentsData\";\nimport CommentInputItem from \"./CommentInputItem\";\n\ninterface IProps {\n  animeId: string;\n  comments: IUserAndCommentData[] | undefined;\n  fetchData: () => void;\n}\n\nfunction CommentInput({ animeId, comments, fetchData }: IProps): ReactElement {\n  const { isAuth } = useSelector(selectCurrentUser);\n  const [text, setText] = useState(\"\");\n  const userId = getAuth().currentUser?.uid;\n\n  function updateComment(newText: string) {\n    setText(newText);\n  }\n\n  function sendNewComment() {\n    if (comments) {\n      FirebaseService.addNewComment(animeId, userId!, Date.now(), text);\n    } else {\n      FirebaseService.addFirstComment(animeId, userId!, Date.now(), text);\n    }\n    setText(\"\");\n    fetchData();\n  }\n\n  return (\n    <CommentInputItem\n      isAuth={isAuth}\n      text={text}\n      updateComment={updateComment}\n      sendNewComment={sendNewComment}\n    />\n  );\n}\n\nexport default CommentInput;\n","import { ReactElement } from \"react\";\nimport { RequestStatuses } from \"../../const/requestStatuses\";\nimport { IUserAndCommentData } from \"../../types/ICommentsData\";\nimport Comment from \"../Comment/Comment\";\nimport CommentInput from \"../CommentInput/CommentInput\";\n\ninterface IProps {\n  animeId: string;\n  comments: IUserAndCommentData[] | undefined;\n  fetchData: () => void;\n  status: string;\n}\n\nfunction CommentsItem({\n  animeId,\n  fetchData,\n  comments,\n  status,\n}: IProps): ReactElement {\n  return (\n    <div className=\"wrapperM\">\n      <CommentInput\n        animeId={animeId}\n        comments={comments}\n        fetchData={fetchData}\n      />\n      {status === RequestStatuses.SUCCEEDED && (\n        <div>\n          {comments?.map((comment) => (\n            <Comment key={String(comment.date)} comment={comment} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CommentsItem;\n","import { ReactElement, useEffect, useState } from \"react\";\nimport FirebaseService from \"../../api/FirebaseService\";\nimport { RequestStatuses } from \"../../const/requestStatuses\";\nimport { IUserAndCommentData } from \"../../types/ICommentsData\";\nimport { IUserData } from \"../../types/IUserData\";\nimport CommentsItem from \"./CommentsItem\";\n\ninterface IProps {\n  animeId: string;\n}\n\nfunction Comments({ animeId }: IProps): ReactElement {\n  const [comments, setComments] = useState<IUserAndCommentData[]>();\n  const [status, setStatus] = useState(RequestStatuses.IDLE);\n\n  async function fetchData() {\n    setStatus(RequestStatuses.LOADING);\n\n    const commentData = await FirebaseService.getCommentsData(animeId);\n    if (commentData) {\n      const userIds = new Set<string>();\n      commentData.comments.forEach((comment) => userIds.add(comment.uid));\n\n      const userData = new Map();\n      for (let userId of Array.from(userIds)) {\n        const detailedData = await FirebaseService.getUserData(userId);\n        if (detailedData) {\n          userData.set(userId, detailedData);\n        }\n      }\n\n      const userAndCommentData = commentData.comments.map((comment) => {\n        const user: IUserData = userData.get(comment.uid);\n\n        return {\n          uid: comment.uid,\n          username: user.username,\n          imageUrl: user.imageUrl,\n          date: comment.date,\n          text: comment.text,\n        } as IUserAndCommentData;\n      });\n\n      setComments([...userAndCommentData].reverse());\n      setStatus(RequestStatuses.SUCCEEDED);\n    } else {\n      setStatus(RequestStatuses.FAILED);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <CommentsItem\n      animeId={animeId}\n      comments={comments}\n      fetchData={fetchData}\n      status={status}\n    />\n  );\n}\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"StarIcon_icon__68GTi\"};","import { ReactElement } from \"react\";\nimport styles from \"./StarIcon.module.scss\";\n\nfunction StarIcon(): ReactElement {\n  return (\n    <svg className={styles.icon} viewBox=\"0 0 1920 1920\">\n      <path\n        d=\"M1306.181 1110.407c-28.461 20.781-40.32 57.261-29.477 91.03l166.136 511.398-435.05-316.122c-28.686-20.781-67.086-20.781-95.66 0l-435.05 316.122 166.25-511.623c10.842-33.544-1.017-70.024-29.591-90.805L178.577 794.285h537.825c35.351 0 66.523-22.701 77.365-56.245l166.25-511.51 166.136 511.397a81.155 81.155 0 0 0 77.365 56.358h537.939l-435.276 316.122Zm609.77-372.819c-10.956-33.656-42.014-56.244-77.365-56.244h-612.141l-189.064-582.1C1026.426 65.589 995.367 43 960.017 43c-35.351 0-66.523 22.588-77.365 56.245L693.475 681.344H81.335c-35.351 0-66.41 22.588-77.366 56.244-10.842 33.657 1.017 70.137 29.591 90.918l495.247 359.718-189.29 582.211c-10.842 33.657 1.017 70.137 29.704 90.918 14.23 10.39 31.059 15.586 47.661 15.586 16.829 0 33.657-5.195 47.887-15.699l495.248-359.718 495.02 359.718c28.575 20.894 67.088 20.894 95.775.113 28.574-20.781 40.433-57.261 29.59-91.03l-189.289-582.1 495.247-359.717c28.687-20.781 40.546-57.261 29.59-90.918Z\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport default StarIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Details_container__W8tgr\",\"content\":\"Details_content__i3OEA\",\"trailerContainer\":\"Details_trailerContainer__dIrwl\",\"trailerIcon\":\"Details_trailerIcon__5gYcI\",\"shortDetails\":\"Details_shortDetails__R6GU-\",\"rating\":\"Details_rating__QK5yq\",\"separator\":\"Details_separator__dhwwP\",\"description\":\"Details_description__46UvO\"};","import { ReactElement } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PlayIcon from \"../../assets/icons/PlayIcon/PlayIcon\";\nimport StarIcon from \"../../assets/icons/StarIcon/StarIcon\";\nimport { IAnimeInfo } from \"../../types/IAnimeInfo\";\nimport styles from \"./Details.module.scss\";\n\ninterface IProps {\n  animeInfo: IAnimeInfo;\n}\n\nfunction DetailsItem({ animeInfo }: IProps): ReactElement {\n  return (\n    <div className={styles.container}>\n      <img src={animeInfo.cover} alt=\"\" />\n      <div className={[styles.content, \"wrapperM\"].join(\" \")}>\n        {animeInfo.trailer && (\n          <div>\n            <NavLink\n              to={\n                \"https://www.\" +\n                animeInfo?.trailer.site +\n                \".com/watch?v=\" +\n                animeInfo?.trailer.id\n              }\n              target=\"_blank\"\n              className={styles.trailerContainer}\n            >\n              <PlayIcon className={styles.trailerIcon} /> <span>Trailer</span>\n            </NavLink>\n          </div>\n        )}\n        <h1>{animeInfo?.title.english}</h1>\n        <div className={styles.shortDetails}>\n          {animeInfo.rating && (\n            <>\n              <span className={styles.rating}>\n                <StarIcon /> {animeInfo?.rating}\n              </span>\n              <span className={styles.separator}>|</span>{\" \"}\n            </>\n          )}\n          {animeInfo.genres.length > 0 && (\n            <>\n              <span>{animeInfo?.genres[0]}</span>\n              <span className={styles.separator}>|</span>{\" \"}\n            </>\n          )}\n          {animeInfo.releaseDate && (\n            <>\n              <span>{animeInfo?.releaseDate}</span>\n              <span className={styles.separator}>|</span>\n            </>\n          )}\n          {animeInfo.status && (\n            <>\n              <span>{animeInfo?.status}</span>\n              <span className={styles.separator}>|</span>\n            </>\n          )}\n          {animeInfo.currentEpisode && animeInfo.totalEpisodes && (\n            <span>\n              {animeInfo?.currentEpisode + \"/\" + animeInfo?.totalEpisodes}\n            </span>\n          )}\n        </div>\n        <div\n          className={styles.description}\n          dangerouslySetInnerHTML={{\n            __html: animeInfo?.description ? animeInfo?.description : \"\",\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailsItem;\n","import { ReactElement } from \"react\";\nimport { IAnimeInfo } from \"../../types/IAnimeInfo\";\nimport DetailsItem from \"./DetailsItem\";\n\ninterface IProps {\n  animeInfo: IAnimeInfo;\n}\n\nfunction Details({ animeInfo }: IProps): ReactElement {\n  return <DetailsItem animeInfo={animeInfo} />;\n}\n\nexport default Details;\n","export const proxyUrl =\n  \"https://m3u8proxy.nothinginteresting.workers.dev/?url=\";\n","import { useEffect, useRef } from \"react\";\nimport Artplayer from \"artplayer\";\nimport Hls from \"hls.js\";\nimport Option from \"artplayer/types/option\";\n\ninterface IProps {\n  getInstance: (art: Artplayer) => any;\n  className?: string;\n  option: Option;\n}\n\nfunction ArtPlayerItem({ option, getInstance, ...rest }: IProps) {\n  const artRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const art = new Artplayer({\n      ...option,\n      container: artRef.current ? artRef.current : \"\",\n      theme: \"#2f80ed\",\n      type: \"m3u8\",\n      setting: true,\n      playbackRate: true,\n      fullscreen: true,\n      customType: {\n        m3u8: playM3u8,\n      },\n    });\n\n    if (getInstance && typeof getInstance === \"function\") {\n      getInstance(art);\n    }\n\n    return () => {\n      if (art && art.destroy) {\n        art.destroy(false);\n      }\n    };\n  }, []);\n\n  return <div ref={artRef} {...rest}></div>;\n}\n\nfunction playM3u8(video: HTMLMediaElement, url: string, art: Artplayer) {\n  if (Hls.isSupported()) {\n    const hls = new Hls();\n    hls.loadSource(url);\n    hls.attachMedia(video);\n\n    // optional\n    //art.hls = hls\n    art.once(\"url\", () => hls.destroy());\n    art.once(\"destroy\", () => hls.destroy());\n  } else if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\n    video.src = url;\n  } else {\n    art.notice.show = \"Unsupported playback format: m3u8\";\n  }\n}\n\nexport default ArtPlayerItem;\n","import { ReactElement, useEffect } from \"react\";\nimport { proxyUrl } from \"../../const/corsProxy\";\nimport { RequestStatuses } from \"../../const/requestStatuses\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\nimport { fetchStreamInfo } from \"../../store/reducers/StreamInfoSlice\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport ArtPlayerItem from \"./ArtPlayerItem\";\n\ninterface IProps {\n  className?: string;\n  spinnerContainerSize?: string;\n  animeId: string;\n  poster: string;\n}\n\nfunction ArtPlayer({\n  animeId,\n  className,\n  poster,\n  spinnerContainerSize,\n}: IProps): ReactElement {\n  const dispatch = useAppDispatch();\n\n  const { data, status, error } = useAppSelector((store) => store.streamInfo);\n\n  useEffect(() => {\n    dispatch(fetchStreamInfo(animeId));\n  }, [animeId]);\n\n  let content;\n  switch (status) {\n    case RequestStatuses.IDLE:\n      content = <></>;\n      break;\n    case RequestStatuses.LOADING:\n      content = <Spinner containerSize={spinnerContainerSize} />;\n      break;\n    case RequestStatuses.SUCCEEDED:\n      content = (\n        <ArtPlayerItem\n          option={{\n            url: proxyUrl + data.sources[3].url,\n            container: \".artplayer-container\",\n            poster: proxyUrl + poster,\n            quality: data.sources\n              .filter((source) => source.quality.match(/\\d[p]/))\n              .map((source) => {\n                return {\n                  html: source.quality,\n                  url: proxyUrl + source.url,\n                };\n              }),\n          }}\n          getInstance={() => { }}\n          className={className}\n        />\n      );\n      break;\n    case RequestStatuses.FAILED:\n      content = <div>{error}</div>;\n      break;\n  }\n\n  return <>{content}</>;\n}\n\nexport default ArtPlayer;\n","import { ReactElement, useState } from \"react\";\nimport { useObserver } from \"../../hooks/useObserver\";\nimport Trigger from \"../UI/Trigger/Trigger\";\n\ninterface IProps {\n  children: ReactElement;\n}\n\nfunction LazyLoadingContainer({ children }: IProps): ReactElement {\n  const [isIntersected, setIsIntersected] = useState(false);\n\n  const target = useObserver(() => {\n    setIsIntersected(true);\n  });\n\n  return isIntersected ? children : <Trigger target={target} />;\n}\n\nexport default LazyLoadingContainer;\n","import { ReactElement } from \"react\";\nimport { ILanguageTitles } from \"../../../../types/ILanguageTitles\";\nimport EpisodeBox from \"../../EpisodeBox/EpisodeBox\";\nimport EmptyCard, { CardSizes } from \"../EmptyCard/EmptyCard\";\n\ninterface IProps {\n  title: string;\n  id: string;\n  image: string;\n  number: number;\n  applyNewEpisode: (id: string) => void;\n  isActive: boolean;\n}\n\nfunction EpisodeCard({\n  title,\n  id,\n  image,\n  number,\n  applyNewEpisode,\n  isActive,\n}: IProps): ReactElement {\n  const episodeWindow = <EpisodeBox>{number}</EpisodeBox>;\n  const englishTitle: ILanguageTitles = {\n    english: title,\n    romaji: \"\",\n    native: \"\",\n  };\n\n  function applyEpisode() {\n    applyNewEpisode(id);\n  }\n\n  return (\n    <EmptyCard\n      animeId=\"\"\n      imageSize={CardSizes.WIDE}\n      isMainContentIn\n      visibleRightCorner\n      title={englishTitle}\n      image={image}\n      rightCornerContent={episodeWindow}\n      onClick={applyEpisode}\n      hasGlowing={isActive}\n    />\n  );\n}\n\nexport default EpisodeCard;\n","import { IAnimeEpisode } from \"../../../types/IAnimeEpisode\";\nimport EpisodeCard from \"../../UI/Cards/EpisodeCard/EpisodeCard\";\nimport EmptySliderPanel from \"../EmptySliderPanel/EmptySliderPanel\";\n\ninterface IProps {\n  current: string;\n  episodes: IAnimeEpisode[];\n  applyNewEpisode: (id: string) => void;\n}\n\nfunction EpisodeSliderPanel({ episodes, current, applyNewEpisode }: IProps) {\n  return (\n    <EmptySliderPanel\n      elements={episodes.map((episode) => (\n        <EpisodeCard\n          id={episode.id}\n          title={episode.title}\n          number={episode.number}\n          image={episode.image}\n          applyNewEpisode={applyNewEpisode}\n          isActive={current === episode.id}\n        />\n      ))}\n    />\n  );\n}\n\nexport default EpisodeSliderPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"player\":\"EpisodeSection_player__2zBNH\",\"spinnerPlayerSize\":\"EpisodeSection_spinnerPlayerSize__eZ6D6\"};","import { ReactElement } from \"react\";\nimport { IAnimeEpisode } from \"../../types/IAnimeEpisode\";\nimport ArtPlayer from \"../ArtPlayer/ArtPlayer\";\nimport LazyLoadingContainer from \"../LazyLoadingContainer/LazyLoadingContainer\";\nimport EpisodeSliderPanel from \"../SliderPanels/EpisodeSliderPanel/EpisodeSliderPanel\";\nimport styles from \"./EpisodeSection.module.scss\";\n\ninterface IProps {\n  episodes: IAnimeEpisode[];\n  currentEpisode: IAnimeEpisode;\n  applyNewEpisode: (id: string) => void;\n}\n\nfunction EpisodeSectionItem({\n  episodes,\n  currentEpisode,\n  applyNewEpisode,\n}: IProps): ReactElement {\n  return (\n    <>\n      <ArtPlayer\n        animeId={currentEpisode.id}\n        poster={currentEpisode.image}\n        className={[styles.player, \"wrapperM\"].join(\" \")}\n        spinnerContainerSize={styles.spinnerPlayerSize}\n      />\n\n      <LazyLoadingContainer>\n        <EpisodeSliderPanel\n          episodes={episodes}\n          current={currentEpisode.id}\n          applyNewEpisode={applyNewEpisode}\n        />\n      </LazyLoadingContainer>\n    </>\n  );\n}\n\nexport default EpisodeSectionItem;\n","import { ReactElement, useState } from \"react\";\nimport { IAnimeEpisode } from \"../../types/IAnimeEpisode\";\nimport EpisodeSectionItem from \"./EpisodeSectionItem\";\n\ninterface IProps {\n  episodes: IAnimeEpisode[];\n}\n\nfunction EpisodeSection({ episodes }: IProps): ReactElement {\n  const [currentEpisode, setCurrentEpisode] = useState<IAnimeEpisode>(\n    episodes[0]\n  );\n\n  function applyNewEpisode(id: string): void {\n    const newEp = episodes.find((episode) => episode.id === id);\n    if (newEp) {\n      setCurrentEpisode(newEp);\n    }\n  }\n\n  return (\n    <EpisodeSectionItem\n      episodes={episodes}\n      currentEpisode={currentEpisode}\n      applyNewEpisode={applyNewEpisode}\n    />\n  );\n}\n\nexport default EpisodeSection;\n","import { ReactElement } from \"react\";\nimport StarIcon from \"../../../../assets/icons/StarIcon/StarIcon\";\nimport useNavigateAnime from \"../../../../hooks/useNavigateAnime\";\nimport { ILanguageTitles } from \"../../../../types/ILanguageTitles\";\nimport YearWindow from \"../../YearWindow/YearWindow\";\nimport EmptyCard, { CardSizes } from \"../EmptyCard/EmptyCard\";\n\ninterface IProps {\n  title: ILanguageTitles;\n  id: number;\n  image: string;\n  type: string;\n  rating: number;\n}\n\nfunction RecommendationCard({\n  title,\n  id,\n  image,\n  type,\n  rating,\n}: IProps): ReactElement {\n  const openAnime = useNavigateAnime(id);\n  const ratingWindow = (\n    <YearWindow roundedCorners>\n      <StarIcon /> {rating}\n    </YearWindow>\n  );\n\n  const list = [];\n  if (type) {\n    list.push(type);\n  }\n\n  return (\n    <EmptyCard\n      animeId={id + \"\"}\n      imageSize={CardSizes.SMALL}\n      hasBookmark\n      hasPlayButton\n      title={title}\n      image={image}\n      list={list}\n      rightCornerContent={ratingWindow}\n      onClick={openAnime}\n    />\n  );\n}\n\nexport default RecommendationCard;\n","import { IAnimeRecommendation } from \"../../../types/IAnimeRecommendation\";\nimport RecommendationCard from \"../../UI/Cards/RecommendationCard/RecommendationCard\";\nimport EmptySliderPanel from \"../EmptySliderPanel/EmptySliderPanel\";\n\ninterface IProps {\n  recommendations: IAnimeRecommendation[];\n}\n\nfunction RecommendationSliderPanel({ recommendations }: IProps) {\n  return (\n    <EmptySliderPanel\n      title=\"Recommendations\"\n      elements={recommendations.map((recommendation) => (\n        <RecommendationCard\n          id={recommendation.id}\n          title={recommendation.title}\n          type={recommendation.type}\n          image={recommendation.image}\n          rating={recommendation.rating}\n        />\n      ))}\n    />\n  );\n}\n\nexport default RecommendationSliderPanel;\n","import { ReactElement } from \"react\";\nimport useNavigateAnime from \"../../../../hooks/useNavigateAnime\";\nimport { ILanguageTitles } from \"../../../../types/ILanguageTitles\";\nimport EmptyCard, { CardSizes } from \"../EmptyCard/EmptyCard\";\n\ninterface IProps {\n  title: ILanguageTitles;\n  id: number;\n  image: string;\n  type: string;\n  relationType: string;\n}\n\nfunction RelationCard({\n  title,\n  id,\n  image,\n  type,\n  relationType,\n}: IProps): ReactElement {\n  const openAnime = useNavigateAnime(id);\n  const list = [type, relationType];\n\n  return (\n    <EmptyCard\n      animeId={id + \"\"}\n      imageSize={CardSizes.SMALL}\n      hasBookmark\n      hasPlayButton\n      title={title}\n      image={image}\n      list={list}\n      onClick={openAnime}\n    />\n  );\n}\n\nexport default RelationCard;\n","import { IAnimeRelation } from \"../../../types/IAnimeRelation\";\nimport RelationCard from \"../../UI/Cards/RelationCard/RelationCard\";\nimport EmptySliderPanel from \"../EmptySliderPanel/EmptySliderPanel\";\n\ninterface IProps {\n  relations: IAnimeRelation[];\n}\n\nfunction RelationSliderPanel({ relations }: IProps) {\n  return (\n    <EmptySliderPanel\n      title=\"Relations\"\n      elements={relations.map((relation) => (\n        <RelationCard\n          id={relation.id}\n          title={relation.title}\n          type={relation.type}\n          image={relation.image}\n          relationType={relation.relationType}\n        />\n      ))}\n    />\n  );\n}\n\nexport default RelationSliderPanel;\n","// extracted by mini-css-extract-plugin\nexport default {\"spinnerHeight\":\"AnimePage_spinnerHeight__Ut9WJ\",\"sorry\":\"AnimePage_sorry__m2f0u\"};","import { ReactElement } from \"react\";\nimport Comments from \"../../components/Comments/Comments\";\nimport Details from \"../../components/Details/Details\";\nimport EpisodeSection from \"../../components/EpisodeSection/EpisodeSection\";\nimport LazyLoadingContainer from \"../../components/LazyLoadingContainer/LazyLoadingContainer\";\nimport RecommendationSliderPanel from \"../../components/SliderPanels/RecommendationSliderPanel/RecommendationSliderPanel\";\nimport RelationSliderPanel from \"../../components/SliderPanels/RelationSliderPanel/RelationSliderPanel\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport { RequestStatuses } from \"../../const/requestStatuses\";\nimport { IAnimeEpisode } from \"../../types/IAnimeEpisode\";\nimport { IAnimeInfo } from \"../../types/IAnimeInfo\";\nimport { IAnimeRecommendation } from \"../../types/IAnimeRecommendation\";\nimport { IAnimeRelation } from \"../../types/IAnimeRelation\";\nimport styles from \"./AnimePage.module.scss\";\n\ninterface IProps {\n  animeStatus: string;\n  animeError: string;\n  animeInfo: IAnimeInfo;\n  relations: IAnimeRelation[];\n}\n\nfunction AnimePageItem({\n  animeStatus,\n  animeInfo,\n  animeError,\n  relations,\n}: IProps): ReactElement {\n  const episodes: IAnimeEpisode[] = animeInfo.episodes;\n  const recommendations: IAnimeRecommendation[] = animeInfo.recommendations;\n\n  let content;\n  switch (animeStatus) {\n    case RequestStatuses.IDLE:\n      content = <></>;\n      break;\n    case RequestStatuses.SUCCEEDED:\n      content = (\n        <div>\n          <Details animeInfo={animeInfo} />\n\n          {episodes.length > 0 ? (\n            <EpisodeSection episodes={[...episodes].reverse()} />\n          ) : (\n            <div className={styles.sorry}>\n              This anime isn't available for watching. We are sorry\n            </div>\n          )}\n\n          {relations.length > 0 && (\n            <LazyLoadingContainer>\n              <RelationSliderPanel relations={relations} />\n            </LazyLoadingContainer>\n          )}\n\n          {recommendations.length > 0 && (\n            <LazyLoadingContainer>\n              <RecommendationSliderPanel recommendations={recommendations} />\n            </LazyLoadingContainer>\n          )}\n\n          <LazyLoadingContainer>\n            <Comments animeId={animeInfo.id} />\n          </LazyLoadingContainer>\n        </div>\n      );\n      break;\n    case RequestStatuses.LOADING:\n      content = <Spinner containerSize={styles.spinnerHeight} />;\n      break;\n    case RequestStatuses.FAILED:\n      content = <div>{animeError}</div>;\n      break;\n  }\n\n  return <div>{content}</div>;\n}\n\nexport default AnimePageItem;\n","import { ReactElement, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { compareId } from \"../../helpers/compareFunctions\";\nimport { useAppDispatch, useAppSelector } from \"../../hooks/redux\";\nimport {\n  fetchAnimeInfo,\n  selectAnimeInfo,\n  selectAnimeRelations,\n} from \"../../store/reducers/AnimeInfoSlice\";\nimport AnimePageItem from \"./AnimePageItem\";\n\nfunction AnimePage(): ReactElement {\n  const dispatch = useAppDispatch();\n  const { id } = useParams();\n\n  const {\n    data: animeInfo,\n    error: animeError,\n    status: animeStatus,\n  } = useAppSelector(selectAnimeInfo);\n\n  const relations = useAppSelector(\n    selectAnimeRelations,\n    compareId // to prevent re-renders\n  );\n\n  useEffect(() => {\n    dispatch(fetchAnimeInfo(String(id)));\n  }, [id]);\n\n  return (\n    <AnimePageItem\n      animeStatus={animeStatus}\n      animeError={animeError}\n      animeInfo={animeInfo}\n      relations={relations}\n    />\n  );\n}\n\nexport default AnimePage;\n"],"names":["compareId","oldValue","newValue","length","every","element","index","id","comment","className","styles","src","imageUrl","alt","username","Date","date","toLocaleString","text","isAuth","updateComment","sendNewComment","rows","maxLength","placeholder","value","onChange","e","target","onClick","disabled","join","to","RouteNames","animeId","comments","fetchData","useSelector","selectCurrentUser","useState","setText","userId","getAuth","currentUser","uid","newText","FirebaseService","now","status","RequestStatuses","map","String","setComments","setStatus","commentData","userIds","Set","forEach","add","userData","Map","Array","from","detailedData","set","userAndCommentData","user","get","reverse","useEffect","viewBox","d","fillRule","animeInfo","cover","trailer","site","PlayIcon","title","english","rating","genres","releaseDate","currentEpisode","totalEpisodes","dangerouslySetInnerHTML","__html","description","proxyUrl","playM3u8","video","url","art","Hls","hls","loadSource","attachMedia","once","destroy","canPlayType","notice","show","option","getInstance","rest","artRef","useRef","Artplayer","container","current","theme","type","setting","playbackRate","fullscreen","customType","m3u8","ref","content","poster","spinnerContainerSize","dispatch","useAppDispatch","useAppSelector","store","streamInfo","data","error","fetchStreamInfo","Spinner","containerSize","sources","quality","filter","source","match","html","children","isIntersected","setIsIntersected","useObserver","Trigger","image","number","applyNewEpisode","isActive","episodeWindow","EpisodeBox","englishTitle","romaji","native","EmptyCard","imageSize","CardSizes","isMainContentIn","visibleRightCorner","rightCornerContent","hasGlowing","episodes","EmptySliderPanel","elements","episode","setCurrentEpisode","newEp","find","openAnime","useNavigateAnime","ratingWindow","YearWindow","roundedCorners","list","push","hasBookmark","hasPlayButton","recommendations","recommendation","relationType","relations","relation","animeStatus","animeError","useParams","selectAnimeInfo","selectAnimeRelations","fetchAnimeInfo"],"sourceRoot":""}